{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-End\\\\Proyectos\\\\music-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState, useEffect } from \"react/cjs/react.production.min\";\nimport Header from \"./components/Layout/Header\";\nimport MusicList from \"./components/Music/MusicList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [music, setMusic] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  /*\n    const musicList = [\n      {\n        id: \"1\",\n        title: \"unravel\",\n        album: \"album_1\",\n        author: \"author_1\",\n      },\n      {\n        id: \"2\",\n        title: \"title_2\",\n        album: \"album_2\",\n        author: \"author_2\",\n      },\n    ];\n    */\n\n  const fetchHandler = useCallback(async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(\"https://theaudiodb.p.rapidapi.com/playlist.php?s=Top_Popular_Tracks_2019\", {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-key\": \"afc7c5ac22mshea40c7eb8bdd14fp1c7715jsn48105b87b3fe\",\n          \"x-rapidapi-host\": \"theaudiodb.p.rapidapi.com\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const transformedMusic = data.results.map(musicData => {\n        return {\n          id: musicData.pos,\n          title: musicData.name,\n          album: musicData.name,\n          author: musicData.urlvideo\n        };\n      });\n      setMusic(transformedMusic);\n    } catch (err) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchHandler();\n  }, [fetchHandler]);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no music.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 19\n  }, this);\n\n  if (music.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MusicList, {\n      music: music\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"c/enPVt+Fxj9kGqs3WN6cSBJhP8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Front-End/Proyectos/music-app/src/App.js"],"names":["useCallback","useState","useEffect","Header","MusicList","App","music","setMusic","isLoading","setIsLoading","error","setError","fetchHandler","response","fetch","ok","Error","data","json","transformedMusic","results","map","musicData","id","pos","title","name","album","author","urlvideo","err","message","content","length"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAiCC,SAAjC,QAAiD,gCAAjD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,QAAMW,YAAY,GAAGZ,WAAW,CAAC,YAAS;AACxCS,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAG;AACD,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,0EAAD,EAA6E;AACvG,kBAAU,KAD6F;AAEvG,mBAAW;AACT,4BAAkB,oDADT;AAET,6BAAmB;AAFV;AAF4F,OAA7E,CAA5B;;AAOA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,YAAMC,gBAAgB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACvD,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACE,GADT;AAELC,UAAAA,KAAK,EAAEH,SAAS,CAACI,IAFZ;AAGLC,UAAAA,KAAK,EAAEL,SAAS,CAACI,IAHZ;AAILE,UAAAA,MAAM,EAAEN,SAAS,CAACO;AAJb,SAAP;AAMD,OAPwB,CAAzB;AAQAtB,MAAAA,QAAQ,CAACY,gBAAD,CAAR;AAED,KAtBD,CAsBC,OAAMW,GAAN,EAAU;AACRnB,MAAAA,QAAQ,CAACD,KAAK,CAACqB,OAAP,CAAR;AACF;;AACDtB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA7B+B,EA6B7B,EA7B6B,CAAhC;AA+BAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,MAAIoB,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAI1B,KAAK,CAAC2B,MAAN,GAAe,CAAnB,EAAsB;AACpBD,IAAAA,OAAO,gBAAG,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE1B;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAII,KAAJ,EAAW;AACTsB,IAAAA,OAAO,gBAAG;AAAA,gBAAItB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIF,SAAJ,EAAe;AACbwB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACH,sBACE;AAAA,4BACE;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA9EQ3B,G;;KAAAA,G;AAgFT,eAAeA,GAAf","sourcesContent":["import { useCallback, useState , useEffect} from \"react/cjs/react.production.min\";\nimport Header from \"./components/Layout/Header\";\nimport MusicList from \"./components/Music/MusicList\";\n\nfunction App() {\n  const [music, setMusic]= useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n/*\n  const musicList = [\n    {\n      id: \"1\",\n      title: \"unravel\",\n      album: \"album_1\",\n      author: \"author_1\",\n    },\n    {\n      id: \"2\",\n      title: \"title_2\",\n      album: \"album_2\",\n      author: \"author_2\",\n    },\n  ];\n  */\n    const fetchHandler = useCallback(async()=>{\n      setIsLoading(true);\n\n      try{\n        const response = await fetch(\"https://theaudiodb.p.rapidapi.com/playlist.php?s=Top_Popular_Tracks_2019\", {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-key\": \"afc7c5ac22mshea40c7eb8bdd14fp1c7715jsn48105b87b3fe\",\n            \"x-rapidapi-host\": \"theaudiodb.p.rapidapi.com\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Something went wrong!');\n        }\n        const data = await response.json();\n        const transformedMusic = data.results.map((musicData) => {\n          return {\n            id: musicData.pos,\n            title: musicData.name,\n            album: musicData.name,\n            author: musicData.urlvideo,\n          };\n        });\n        setMusic(transformedMusic);\n\n      }catch(err){\n         setError(error.message);\n      }\n      setIsLoading(false);\n    }, []);\n\n    useEffect(() => {\n      fetchHandler();\n    }, [fetchHandler]);\n  \n    let content = <p>Found no music.</p>;\n\n    if (music.length > 0) {\n      content = <MusicList music={music} />;\n    }\n  \n    if (error) {\n      content = <p>{error}</p>;\n    }\n  \n    if (isLoading) {\n      content = <p>Loading...</p>;\n    }\n  return (\n    <div>\n      <section>\n        <Header />\n      </section>\n      <section>\n        {content}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}