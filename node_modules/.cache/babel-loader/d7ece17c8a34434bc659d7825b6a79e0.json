{"ast":null,"code":"import qs from \"qs\"; // Access Token Request\n\nexport const authorization = async () => {\n  const response = await fetch(\"https://accounts.spotify.com/api/token\", {\n    method: \"POST\",\n    body: qs.stringify({\n      grant_type: \"client_credentials\"\n    }),\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: \"Basic MjlkZDU0NzI3ZDAxNGE2YzhhZTA2NWIwNmNiNDdkY2E6MDExNGU5ODYxNjBiNDNlZWJkMTE1NGVmYTFkNjFjOWM=\"\n    }\n  });\n  const data = await response.json();\n  let authToken = data[\"access_token\"];\n  return authToken;\n}; // Playlist Tracks Request\n\nexport const api_Music = async (token, playlist_id) => {\n  const response = await fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks?market=ES&limit=8`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token\n    }\n  });\n  const data = await response.json();\n  const transformedMusic = data.items.map(musicData => {\n    return {\n      id: musicData.track.id,\n      title: musicData.track.name,\n      album: musicData.track.album.name,\n      author: musicData.track.artists[0].name\n    };\n  });\n  return transformedMusic;\n};","map":{"version":3,"sources":["D:/Front-End/Proyectos/music-app/music-app/src/api-calls.js"],"names":["qs","authorization","response","fetch","method","body","stringify","grant_type","headers","Authorization","data","json","authToken","api_Music","token","playlist_id","Accept","transformedMusic","items","map","musicData","id","track","title","name","album","author","artists"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,YAAY;AACvC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;AACrEC,IAAAA,MAAM,EAAE,MAD6D;AAErEC,IAAAA,IAAI,EAAEL,EAAE,CAACM,SAAH,CAAa;AACjBC,MAAAA,UAAU,EAAE;AADK,KAAb,CAF+D;AAKrEC,IAAAA,OAAO,EAAE;AACP,sBAAgB,mCADT;AAEPC,MAAAA,aAAa,EACX;AAHK;AAL4D,GAA3C,CAA5B;AAWA,QAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACA,MAAIC,SAAS,GAAGF,IAAI,CAAC,cAAD,CAApB;AACA,SAAOE,SAAP;AACD,CAfM,C,CAiBP;;AACA,OAAO,MAAMC,SAAS,GAAG,OAAOC,KAAP,EAAcC,WAAd,KAA8B;AACrD,QAAMb,QAAQ,GAAG,MAAMC,KAAK,CACzB,wCAAuCY,WAAY,2BAD1B,EAE1B;AACEX,IAAAA,MAAM,EAAE,KADV;AAEEI,IAAAA,OAAO,EAAE;AACPQ,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,kBAFT;AAGPP,MAAAA,aAAa,EAAE,YAAYK;AAHpB;AAFX,GAF0B,CAA5B;AAYA,QAAMJ,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACA,QAAMM,gBAAgB,GAAGP,IAAI,CAACQ,KAAL,CAAWC,GAAX,CAAgBC,SAAD,IAAe;AACrD,WAAO;AACLC,MAAAA,EAAE,EAAED,SAAS,CAACE,KAAV,CAAgBD,EADf;AAELE,MAAAA,KAAK,EAAEH,SAAS,CAACE,KAAV,CAAgBE,IAFlB;AAGLC,MAAAA,KAAK,EAAEL,SAAS,CAACE,KAAV,CAAgBG,KAAhB,CAAsBD,IAHxB;AAILE,MAAAA,MAAM,EAAEN,SAAS,CAACE,KAAV,CAAgBK,OAAhB,CAAwB,CAAxB,EAA2BH;AAJ9B,KAAP;AAMD,GAPwB,CAAzB;AAQA,SAAOP,gBAAP;AACD,CAvBM","sourcesContent":["import qs from \"qs\";\r\n\r\n// Access Token Request\r\nexport const authorization = async () => {\r\n  const response = await fetch(\"https://accounts.spotify.com/api/token\", {\r\n    method: \"POST\",\r\n    body: qs.stringify({\r\n      grant_type: \"client_credentials\",\r\n    }),\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      Authorization:\r\n        \"Basic MjlkZDU0NzI3ZDAxNGE2YzhhZTA2NWIwNmNiNDdkY2E6MDExNGU5ODYxNjBiNDNlZWJkMTE1NGVmYTFkNjFjOWM=\",\r\n    },\r\n  });\r\n  const data = await response.json();\r\n  let authToken = data[\"access_token\"];\r\n  return authToken;\r\n};\r\n\r\n// Playlist Tracks Request\r\nexport const api_Music = async (token, playlist_id) => {\r\n  const response = await fetch(\r\n    `https://api.spotify.com/v1/playlists/${playlist_id}/tracks?market=ES&limit=8`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n\r\n  const data = await response.json();\r\n  const transformedMusic = data.items.map((musicData) => {\r\n    return {\r\n      id: musicData.track.id,\r\n      title: musicData.track.name,\r\n      album: musicData.track.album.name,\r\n      author: musicData.track.artists[0].name,\r\n    };\r\n  });\r\n  return transformedMusic;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}