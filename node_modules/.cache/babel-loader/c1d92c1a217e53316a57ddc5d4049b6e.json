{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-End\\\\Proyectos\\\\music-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react/cjs/react.production.min\";\nimport Header from \"./components/Layout/Header\";\nimport MusicList from \"./components/Music/MusicList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [music, setMusic] = useState([]);\n  /*\n  const musicList = [\n    {\n      id: \"1\",\n      title: \"unravel\",\n      album: \"album_1\",\n      author: \"author_1\",\n    },\n    {\n      id: \"2\",\n      title: \"title_2\",\n      album: \"album_2\",\n      author: \"author_2\",\n    },\n  ];\n  */\n\n  const fetchHandler = async url => {\n    try {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const transformedMusic = data.results.map(musicData => {\n        return {\n          id: musicData.episode_id,\n          title: musicData.title,\n          openingText: musicData.opening_crawl,\n          releaseDate: musicData.release_date\n        };\n      });\n      setMusic(transformedMusic);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        onFetch: fetchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MusicList, {\n        music: music\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Duf+0N8n1OX8Bg45f29MKNM3DvU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Front-End/Proyectos/music-app/src/App.js"],"names":["useState","Header","MusicList","App","music","setMusic","fetchHandler","url","response","fetch","ok","Error","data","json","transformedMusic","results","map","musicData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","err","console","log","message"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMM,YAAY,GAAG,MAAMC,GAAN,IAAc;AACjC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;;AACA,UAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,YAAMC,gBAAgB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACvD,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,UAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,UAAAA,WAAW,EAAEJ,SAAS,CAACK,aAHlB;AAILC,UAAAA,WAAW,EAAEN,SAAS,CAACO;AAJlB,SAAP;AAMD,OAPwB,CAAzB;AAQAnB,MAAAA,QAAQ,CAACS,gBAAD,CAAR;AACD,KAfD,CAeE,OAAOW,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD;AACF,GAnBD;;AAqBA,sBACE;AAAA,4BACE;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEtB;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAlDQD,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react/cjs/react.production.min\";\nimport Header from \"./components/Layout/Header\";\nimport MusicList from \"./components/Music/MusicList\";\n\nfunction App() {\n  const [music, setMusic] = useState([]);\n  /*\n  const musicList = [\n    {\n      id: \"1\",\n      title: \"unravel\",\n      album: \"album_1\",\n      author: \"author_1\",\n    },\n    {\n      id: \"2\",\n      title: \"title_2\",\n      album: \"album_2\",\n      author: \"author_2\",\n    },\n  ];\n  */\n\n  const fetchHandler = async(url) => {\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await response.json();\n      const transformedMusic = data.results.map((musicData) => {\n        return {\n          id: musicData.episode_id,\n          title: musicData.title,\n          openingText: musicData.opening_crawl,\n          releaseDate: musicData.release_date,\n        };\n      });\n      setMusic(transformedMusic);\n    } catch (err) {\n      console.log(err.message)\n    }\n  };\n\n  return (\n    <div>\n      <section>\n        <Header onFetch={fetchHandler} />\n      </section>\n      <section>\n        <MusicList music={music} />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}