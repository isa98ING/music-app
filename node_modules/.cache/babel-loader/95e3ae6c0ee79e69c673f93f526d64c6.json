{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-End\\\\Proyectos\\\\music-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Layout/Header\"; //import MusicList from \"./components/Music/MusicList\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [music, setMusic] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchMusicHandler() {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transformedMusic = data.results.map(musicData => {\n      return {\n        id: musicData.episode_id,\n        title: musicData.title,\n        album: musicData.opening_crawl,\n        author: musicData.release_date\n      };\n    });\n    setMusic(transformedMusic);\n    setIsLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PHy9fd7C/k6IFe1S/oIsC+BRogQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Front-End/Proyectos/music-app/src/App.js"],"names":["Header","App","music","setMusic","useState","isLoading","setIsLoading","fetchMusicHandler","response","fetch","data","json","transformedMusic","results","map","musicData","id","episode_id","title","album","opening_crawl","author","release_date"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BF,QAAQ,CAAC,KAAD,CAA1C;;AAEA,iBAAeG,iBAAf,GAAmC;AACjCD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,UAAMC,gBAAgB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACvD,aAAO;AACLC,QAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,QAAAA,KAAK,EAAEJ,SAAS,CAACK,aAHZ;AAILC,QAAAA,MAAM,EAAEN,SAAS,CAACO;AAJb,OAAP;AAMD,KAPwB,CAAzB;AAQAnB,IAAAA,QAAQ,CAACS,gBAAD,CAAR;AACAN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhCQL,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import Header from \"./components/Layout/Header\";\n//import MusicList from \"./components/Music/MusicList\";\n\nfunction App() {\n  const [music, setMusic] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchMusicHandler() {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n\n    const transformedMusic = data.results.map((musicData) => {\n      return {\n        id: musicData.episode_id,\n        title: musicData.title,\n        album: musicData.opening_crawl,\n        author: musicData.release_date,\n      };\n    });\n    setMusic(transformedMusic);\n    setIsLoading(false);\n  }\n\n  return (\n    <div>\n      <Header></Header>\n      {/*\n      <section>\n        <MusicList/>\n      </section>\n      */}\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}